{
  "version": 3,
  "sources": ["../../src/app.ts"],
  "sourcesContent": ["// TypeScript \u5E94\u7528\u6F14\u793A\n// \u5C55\u793A ESBuild \u5982\u4F55\u5904\u7406 TypeScript \u4EE3\u7801\n\nimport { \n  User, \n  UserPreferences, \n  ApiResponse, \n  PaginatedResponse,\n  EventHandler,\n  AsyncHandler,\n  HTTPMethod,\n  HttpStatusCode,\n  TreeNode,\n  UserUpdate\n} from './types.js';\n\n// \u7C7B\u7684\u5B9A\u4E49\u548C\u7EE7\u627F\nabstract class BaseEntity {\n  protected readonly id: string;\n  protected createdAt: Date;\n  \n  constructor(id: string) {\n    this.id = id;\n    this.createdAt = new Date();\n  }\n  \n  abstract validate(): boolean;\n  \n  public getId(): string {\n    return this.id;\n  }\n  \n  public getAge(): number {\n    return Date.now() - this.createdAt.getTime();\n  }\n}\n\n// \u5B9E\u73B0\u62BD\u8C61\u7C7B\nclass UserEntity extends BaseEntity implements User {\n  public name: string;\n  public email: string;\n  public age?: number;\n  public preferences: UserPreferences;\n  \n  constructor(\n    id: string,\n    name: string,\n    email: string,\n    preferences: UserPreferences,\n    age?: number\n  ) {\n    super(id);\n    this.name = name;\n    this.email = email;\n    this.age = age;\n    this.preferences = preferences;\n  }\n  \n  public validate(): boolean {\n    return this.name.length > 0 && \n           this.email.includes('@') && \n           (this.age === undefined || this.age > 0);\n  }\n  \n  public updatePreferences(updates: Partial<UserPreferences>): void {\n    this.preferences = { ...this.preferences, ...updates };\n  }\n  \n  // \u9759\u6001\u65B9\u6CD5\n  static createUser(data: Omit<User, 'id' | 'createdAt'>): UserEntity {\n    const id = Math.random().toString(36).substr(2, 9);\n    return new UserEntity(id, data.name, data.email, data.preferences, data.age);\n  }\n}\n\n// \u6CDB\u578B\u7C7B\nclass Repository<T extends BaseEntity> {\n  private items: Map<string, T> = new Map();\n  \n  public save(entity: T): void {\n    this.items.set(entity.getId(), entity);\n  }\n  \n  public findById(id: string): T | undefined {\n    return this.items.get(id);\n  }\n  \n  public findAll(): T[] {\n    return Array.from(this.items.values());\n  }\n  \n  public delete(id: string): boolean {\n    return this.items.delete(id);\n  }\n  \n  public count(): number {\n    return this.items.size;\n  }\n  \n  // \u6CDB\u578B\u65B9\u6CD5\n  public findWhere<K extends keyof T>(\n    property: K, \n    value: T[K]\n  ): T[] {\n    return this.findAll().filter(item => item[property] === value);\n  }\n}\n\n// API \u670D\u52A1\u7C7B\nclass ApiService {\n  private baseUrl: string;\n  \n  constructor(baseUrl: string = '/api') {\n    this.baseUrl = baseUrl;\n  }\n  \n  // \u6CDB\u578B\u5F02\u6B65\u65B9\u6CD5\n  public async request<T>(\n    method: HTTPMethod,\n    endpoint: string,\n    data?: any\n  ): Promise<ApiResponse<T>> {\n    try {\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: data ? JSON.stringify(data) : undefined,\n      });\n      \n      const result = await response.json();\n      \n      return {\n        success: response.ok,\n        data: result,\n        message: response.ok ? 'Success' : 'Request failed',\n        timestamp: Date.now()\n      };\n    } catch (error) {\n      return {\n        success: false,\n        data: null as T,\n        message: error instanceof Error ? error.message : 'Unknown error',\n        timestamp: Date.now()\n      };\n    }\n  }\n  \n  // \u5177\u4F53\u7684 API \u65B9\u6CD5\n  public async getUsers(): Promise<PaginatedResponse<User>> {\n    return this.request<User[]>('GET', '/users');\n  }\n  \n  public async getUserById(id: string): Promise<ApiResponse<User>> {\n    return this.request<User>('GET', `/users/${id}`);\n  }\n  \n  public async updateUser(id: string, updates: UserUpdate): Promise<ApiResponse<User>> {\n    return this.request<User>('PUT', `/users/${id}`, updates);\n  }\n}\n\n// \u4E8B\u4EF6\u5904\u7406\u5668\nclass EventEmitter<T extends Record<string, any[]>> {\n  private listeners: Map<keyof T, Function[]> = new Map();\n  \n  public on<K extends keyof T>(\n    event: K, \n    listener: (...args: T[K]) => void\n  ): void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event)!.push(listener);\n  }\n  \n  public emit<K extends keyof T>(event: K, ...args: T[K]): void {\n    const eventListeners = this.listeners.get(event);\n    if (eventListeners) {\n      eventListeners.forEach(listener => listener(...args));\n    }\n  }\n  \n  public off<K extends keyof T>(\n    event: K, \n    listener: (...args: T[K]) => void\n  ): void {\n    const eventListeners = this.listeners.get(event);\n    if (eventListeners) {\n      const index = eventListeners.indexOf(listener);\n      if (index > -1) {\n        eventListeners.splice(index, 1);\n      }\n    }\n  }\n}\n\n// \u4E8B\u4EF6\u7C7B\u578B\u5B9A\u4E49\ninterface AppEvents {\n  userCreated: [UserEntity];\n  userUpdated: [UserEntity, UserUpdate];\n  error: [Error];\n}\n\n// \u5DE5\u5177\u51FD\u6570\nfunction createDefaultPreferences(): UserPreferences {\n  return {\n    theme: 'light',\n    language: 'zh-CN',\n    notifications: {\n      email: true,\n      push: true,\n      sms: false\n    }\n  };\n}\n\n// \u7C7B\u578B\u5B88\u536B\nfunction isUser(obj: any): obj is User {\n  return obj && \n         typeof obj.id === 'string' && \n         typeof obj.name === 'string' && \n         typeof obj.email === 'string' &&\n         obj.preferences &&\n         obj.createdAt instanceof Date;\n}\n\n// \u88C5\u9970\u5668\u793A\u4F8B (\u9700\u8981 experimentalDecorators: true)\nfunction log(target: any, propertyName: string, descriptor: PropertyDescriptor) {\n  const method = descriptor.value;\n  descriptor.value = function(...args: any[]) {\n    console.log(`\u8C03\u7528\u65B9\u6CD5: ${propertyName}`, args);\n    const result = method.apply(this, args);\n    console.log(`\u65B9\u6CD5\u7ED3\u679C: ${propertyName}`, result);\n    return result;\n  };\n}\n\n// \u5E94\u7528\u4E3B\u7C7B\nclass App {\n  private userRepository: Repository<UserEntity>;\n  private apiService: ApiService;\n  private eventEmitter: EventEmitter<AppEvents>;\n  \n  constructor() {\n    this.userRepository = new Repository<UserEntity>();\n    this.apiService = new ApiService();\n    this.eventEmitter = new EventEmitter<AppEvents>();\n    \n    this.setupEventListeners();\n  }\n  \n  private setupEventListeners(): void {\n    this.eventEmitter.on('userCreated', (user) => {\n      console.log('\u2705 \u7528\u6237\u521B\u5EFA:', user.name);\n    });\n    \n    this.eventEmitter.on('userUpdated', (user, updates) => {\n      console.log('\uD83D\uDCDD \u7528\u6237\u66F4\u65B0:', user.name, updates);\n    });\n    \n    this.eventEmitter.on('error', (error) => {\n      console.error('\u274C \u9519\u8BEF:', error.message);\n    });\n  }\n  \n  @log\n  public createUser(userData: Omit<User, 'id' | 'createdAt'>): UserEntity {\n    try {\n      const user = UserEntity.createUser(userData);\n      \n      if (!user.validate()) {\n        throw new Error('\u7528\u6237\u6570\u636E\u9A8C\u8BC1\u5931\u8D25');\n      }\n      \n      this.userRepository.save(user);\n      this.eventEmitter.emit('userCreated', user);\n      \n      return user;\n    } catch (error) {\n      this.eventEmitter.emit('error', error as Error);\n      throw error;\n    }\n  }\n  \n  @log\n  public updateUser(id: string, updates: UserUpdate): UserEntity | null {\n    try {\n      const user = this.userRepository.findById(id);\n      if (!user) {\n        throw new Error(`\u7528\u6237\u4E0D\u5B58\u5728: ${id}`);\n      }\n      \n      // \u5E94\u7528\u66F4\u65B0\n      Object.assign(user, updates);\n      \n      if (!user.validate()) {\n        throw new Error('\u66F4\u65B0\u540E\u7684\u7528\u6237\u6570\u636E\u9A8C\u8BC1\u5931\u8D25');\n      }\n      \n      this.userRepository.save(user);\n      this.eventEmitter.emit('userUpdated', user, updates);\n      \n      return user;\n    } catch (error) {\n      this.eventEmitter.emit('error', error as Error);\n      return null;\n    }\n  }\n  \n  public getUsers(): UserEntity[] {\n    return this.userRepository.findAll();\n  }\n  \n  public getUserById(id: string): UserEntity | undefined {\n    return this.userRepository.findById(id);\n  }\n  \n  // \u5F02\u6B65\u64CD\u4F5C\u793A\u4F8B\n  public async syncWithServer(): Promise<void> {\n    try {\n      console.log('\uD83D\uDD04 \u5F00\u59CB\u4E0E\u670D\u52A1\u5668\u540C\u6B65...');\n      \n      const response = await this.apiService.getUsers();\n      \n      if (response.success && Array.isArray(response.data)) {\n        response.data.forEach(userData => {\n          if (isUser(userData)) {\n            const user = new UserEntity(\n              userData.id,\n              userData.name,\n              userData.email,\n              userData.preferences,\n              userData.age\n            );\n            this.userRepository.save(user);\n          }\n        });\n        \n        console.log(`\u2705 \u540C\u6B65\u5B8C\u6210: ${response.data.length} \u4E2A\u7528\u6237`);\n      } else {\n        throw new Error(response.message);\n      }\n    } catch (error) {\n      this.eventEmitter.emit('error', error as Error);\n    }\n  }\n}\n\n// \u6F14\u793A\u51FD\u6570\nexport async function demonstrateTypeScript(): Promise<void> {\n  console.log('\uD83D\uDE80 TypeScript \u7279\u6027\u6F14\u793A\u5F00\u59CB');\n  \n  const app = new App();\n  \n  // \u521B\u5EFA\u7528\u6237\n  const user1 = app.createUser({\n    name: '\u5F20\u4E09',\n    email: 'zhangsan@example.com',\n    age: 30,\n    preferences: createDefaultPreferences()\n  });\n  \n  const user2 = app.createUser({\n    name: '\u674E\u56DB',\n    email: 'lisi@example.com',\n    preferences: {\n      theme: 'dark',\n      language: 'en-US',\n      notifications: {\n        email: false,\n        push: true\n      }\n    }\n  });\n  \n  console.log('\uD83D\uDC65 \u521B\u5EFA\u7684\u7528\u6237:', app.getUsers().map(u => u.name));\n  \n  // \u66F4\u65B0\u7528\u6237\n  app.updateUser(user1.getId(), {\n    name: '\u5F20\u4E09\u4E30',\n    preferences: {\n      theme: 'dark',\n      language: 'zh-CN',\n      notifications: {\n        email: true,\n        push: true,\n        sms: true\n      }\n    }\n  });\n  \n  console.log('\uD83D\uDCDD \u66F4\u65B0\u540E\u7684\u7528\u6237:', app.getUserById(user1.getId())?.name);\n  \n  // \u663E\u793A\u7C7B\u578B\u4FE1\u606F\n  console.log('\uD83D\uDCCA TypeScript \u7F16\u8BD1\u4FE1\u606F:');\n  console.log('- \u6240\u6709\u7C7B\u578B\u68C0\u67E5\u90FD\u5728\u7F16\u8BD1\u65F6\u5B8C\u6210');\n  console.log('- ESBuild \u79FB\u9664\u4E86\u6240\u6709\u7C7B\u578B\u6CE8\u89E3');\n  console.log('- \u4FDD\u7559\u4E86\u8FD0\u884C\u65F6\u7684 JavaScript \u903B\u8F91');\n  console.log('- \u652F\u6301\u6700\u65B0\u7684 TypeScript \u7279\u6027');\n  \n  return Promise.resolve();\n}\n\n// \u9875\u9762\u521D\u59CB\u5316\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', async () => {\n    // \u521B\u5EFA UI\n    const container = document.createElement('div');\n    container.style.cssText = `\n      max-width: 800px;\n      margin: 20px auto;\n      padding: 20px;\n      font-family: 'Segoe UI', system-ui, sans-serif;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border-radius: 12px;\n      box-shadow: 0 15px 35px rgba(0,0,0,0.1);\n    `;\n    \n    container.innerHTML = `\n      <h1 style=\"text-align: center; margin-bottom: 30px;\">\n        \uD83D\uDD37 ESBuild TypeScript \u652F\u6301\u6F14\u793A\n      </h1>\n      <div style=\"background: rgba(255,255,255,0.1); padding: 20px; border-radius: 8px; margin-bottom: 20px;\">\n        <h2>\uD83C\uDFAF TypeScript \u7279\u6027</h2>\n        <ul style=\"line-height: 1.8;\">\n          <li>\u2705 \u7C7B\u548C\u63A5\u53E3\u5B9A\u4E49</li>\n          <li>\u2705 \u6CDB\u578B\u7F16\u7A0B</li>\n          <li>\u2705 \u7C7B\u578B\u63A8\u65AD\u548C\u68C0\u67E5</li>\n          <li>\u2705 \u88C5\u9970\u5668\u652F\u6301</li>\n          <li>\u2705 \u679A\u4E3E\u548C\u8054\u5408\u7C7B\u578B</li>\n          <li>\u2705 \u6A21\u5757\u5BFC\u5165\u5BFC\u51FA</li>\n          <li>\u2705 \u5F02\u6B65/\u7B49\u5F85\u8BED\u6CD5</li>\n          <li>\u2705 \u7C7B\u578B\u5B88\u536B\u548C\u65AD\u8A00</li>\n        </ul>\n      </div>\n      <div id=\"output\" style=\"background: rgba(255,255,255,0.1); padding: 20px; border-radius: 8px;\">\n        <h2>\uD83D\uDCCA \u6267\u884C\u7ED3\u679C</h2>\n        <p>\u6B63\u5728\u6267\u884C TypeScript \u6F14\u793A...</p>\n      </div>\n    `;\n    \n    document.body.appendChild(container);\n    \n    try {\n      await demonstrateTypeScript();\n      const outputDiv = document.getElementById('output')!;\n      outputDiv.innerHTML = `\n        <h2>\uD83D\uDCCA \u6267\u884C\u7ED3\u679C</h2>\n        <p style=\"color: #00ff88; font-weight: bold;\">\u2705 TypeScript \u6F14\u793A\u5B8C\u6210\uFF01</p>\n        <p>\u8BF7\u6253\u5F00\u6D4F\u89C8\u5668\u63A7\u5236\u53F0\u67E5\u770B\u8BE6\u7EC6\u8F93\u51FA</p>\n        <div style=\"margin-top: 15px; padding: 15px; background: rgba(0,0,0,0.2); border-radius: 5px;\">\n          <h3>\uD83D\uDD27 \u6784\u5EFA\u547D\u4EE4</h3>\n          <pre style=\"margin: 10px 0; color: #ffd700;\">npm run build:ts</pre>\n          <p style=\"font-size: 0.9em;\">ESBuild \u81EA\u52A8\u5904\u7406 TypeScript \u7F16\u8BD1\uFF0C\u65E0\u9700\u989D\u5916\u914D\u7F6E\uFF01</p>\n        </div>\n      `;\n    } catch (error) {\n      const outputDiv = document.getElementById('output')!;\n      outputDiv.innerHTML = `\n        <h2>\uD83D\uDCCA \u6267\u884C\u7ED3\u679C</h2>\n        <p style=\"color: #ff6b6b; font-weight: bold;\">\u274C \u6267\u884C\u51FA\u9519: ${(error as Error).message}</p>\n      `;\n    }\n  });\n}"],
  "mappings": "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",
  "names": ["BaseEntity", "id", "UserEntity", "_UserEntity", "name", "email", "preferences", "age", "updates", "data", "Repository", "entity", "property", "value", "item", "ApiService", "baseUrl", "method", "endpoint", "response", "result", "error", "EventEmitter", "event", "listener", "args", "eventListeners", "index", "createDefaultPreferences", "isUser", "obj", "log", "target", "propertyName", "descriptor", "App", "user", "userData", "demonstrateTypeScript", "app", "user1", "user2", "u", "container", "outputDiv"]
}
